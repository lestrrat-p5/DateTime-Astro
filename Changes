Revision history for Perl extension DateTime-Astro

{{$NEXT}}

1.04 2020-09-30T12:29:51Z
    * Make sure it works with perl 5.26 

1.03 2017-08-20T10:32:17Z
    * messed up previous release

1.02 2017-08-20T10:28:44Z
    * Migrate to using Minilla for packaging
    * Fix packaging details

1.01 17 Aug 2017
    * Merged PRs #2, #4, #5
    * Updated travis settings

1.00 24 Aug 2012
    * This module has been sitting around for way too long.
      Although it's not perfect, it works for about 99% of the cases, and
      so I'm just going to release it and see if there's anybody who wants
      to take a stab at making it work even more correctly
    * Declare functions static + inline as much as possible.
    * Very minor optimizations

0.99999_03 24 Aug 2012
    * What, it has been 2 years?!
    * There was a stupid boolean operation that always resulted in true

0.99999_02 27 Aug 2010
    * Fixed the adjustment on new moons so that it's done in one step
      instead of looping by adjusting fixed amounts. This caused a
      significant slow down when calculating new moons that fell in the
      range of year >= 2020. Reported by nekokak.
    * Micro optimize by moving dt_from_moment() to XS.
    * Doc Tweaks

0.99999_01 19 Aug 2010
    * Renamed from DateTime::Util::Astro to DateTime::Astro
    * Rewritten from scratch using MPFR. DateTime::Astro will host 
      ALL astro-related calculations so you only need to link to MPFR once :)
    * Moved repository to github

Changes (from DateTime-Util-Astro, predecessor of this module)
==============================================================

0.12000 - Tue 04 Nov 2007 [rev 3804]
  - Fix ephemeris_correction. The Calculations for middle ages were
    totally and utterly wrong. rt #31157
  - Cache the results from ephemeris_correction. This makes things nominally
    faster.

0.11001 - Wed 30 May 2007
  - Just realized that Exporter qw(import) does not work for Exporter
    versions < 5.57.

0.11 28 May 2007
  - fix solar_longitude_after() to a degree. I still can't get a few dates
    to calculate a close enough approximation, but this should do for
    many cases (patches welcome)
  - use Exporter without subclassing (Sun.pm, Common.pm)
  - add warnings

0.10 28 May 2007
  - use Class::Data::Inheritable.
  - remove set_cache()/get_cache() in favor for cache()
  - make Cache::MemoryCache optional
  - use Exporter without subclassing (Lunar.pm)

0.09 06 Feb 2007
  - Change versioning. No code change.

0.08 05 Feb 2007
  - Use DateTime::Util::Calc 0.12, which fixes various problems.
  - Fix tests accordingly.

0.07 12 Jan 2005
  - Fix bug that came up while debugging DateTime::Event::SolarTerm
  - This version was never released

0.06 12 Jan 2005
  - Fix solar_longitude_before()
  - Add tests

0.05 08 Jan 2005
  - Introduce set_cache()/add_cache() interface.
  - Change default cache to MemoryCache, but recommend FileCache

0.04 07 Jan 2005
  - No more param validation in the name of efficiency
  - Use Math::BigInt/Math::BigFloat more extensively
  - Require newer DateTime::Util::Calc
  - Use Cache::Cache for caching
  - No more memoizing

0.02 10 Feb 2004
  - Change Build.PL to require DateTime::Util::Calc 0.02, which will handle
    prompting for math libraries more elegantly
  - Slightly reduce on the number of calls to moment()

0.01 12 Jan 2004
  - Turn memoization back on.
  - Various minor optimizations (~20% performance increase on some
    cases)

0.01_04 29 Dec 2003
  - Doc tweak

0.01_03 20 Dec 2003
  - Removed debug statement
  - Turns out memoization sometime breaks things. Commented out
    for the time being
  - Changed output of solar_longitude() and lunar_longitude such that
    the calculated value is passed through bf_downgrade(). This should
    speed things up... in some cases.
  - Use constants where applicable

0.01_02 19 Dec 2003
  - Add sanity tests
  - fix some indentation problems

0.01_01 09 Dec 2003
  - Initial Release
